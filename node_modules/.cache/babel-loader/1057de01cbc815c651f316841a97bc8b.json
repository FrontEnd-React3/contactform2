{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ben/Desktop/contactform-with-yup-formik-master/src/components/contactForm3.js\",\n    _s = $RefreshSig$();\n\nimport emailjs from \"emailjs-com\";\nimport React from \"react\";\nimport { Formik, useField, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport \"../App.css\"; // https://www.youtube.com/watch?v=3sXYK60T6Us&t=329s\n// npm install -S yup\n// https://www.youtube.com/watch?v=3sXYK60T6Us\n\nconst CustomTextInput = ({\n  label,\n  ...props\n}) => {\n  _s();\n\n  const [field, meta] = useField(props);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: props.id || props.name,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"text-input\",\n      ...field,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), meta.touched && meta.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: meta.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true);\n};\n\n_s(CustomTextInput, \"ImX69+3rRx1BE5Ru6eNKPZVOEn4=\", false, function () {\n  return [useField];\n});\n\n_c = CustomTextInput;\nexport default function ContactUs() {\n  function sendEmail(values) {\n    console.log(values);\n    emailjs.send(\"template_KYeLN1ok\", values).then(result => {\n      console.log(result.text);\n    }, error => {\n      console.log(error.text);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      name: \"\",\n      email: \"\",\n      subject: \"\",\n      message: \"\"\n    },\n    validationSchema: Yup.object({\n      name: Yup.string().min(2, \"Must be ath least 2 characters\").max(15, \"15characters or less\").required(\"Required\"),\n      email: Yup.string().email(\"Invalid email address\").required(\"Required\"),\n      message: Yup.string().required(\"Required\")\n    }),\n    onSubmit: (values, {\n      setSubmitting,\n      resetForm\n    }) => {\n      setTimeout(() => {\n        sendEmail(values);\n        alert(JSON.stringify(values, null, 2));\n        resetForm();\n        setSubmitting(false);\n      }, 2000);\n    } // && {sendEmail} \n    ,\n    children: props => /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Contact Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CustomTextInput, {\n        label: \"Name\",\n        name: \"name\",\n        type: \"text\",\n        placeholder: \"Frank\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CustomTextInput, {\n        label: \"Email\",\n        name: \"email\",\n        type: \"email\",\n        placeholder: \"Frank@gmail.com\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CustomTextInput, {\n        label: \"Subject (not req.)\",\n        name: \"subject\",\n        type: \"text\",\n        placeholder: \"...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CustomTextInput, {\n        label: \"Message\",\n        id: \"message\",\n        name: \"message\",\n        type: \"textarea\",\n        rows: \"3\",\n        placeholder: \"...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"button\",\n        children: props.isSubmitting ? \"Loading...\" : \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_c2 = ContactUs;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CustomTextInput\");\n$RefreshReg$(_c2, \"ContactUs\");","map":{"version":3,"sources":["/Users/ben/Desktop/contactform-with-yup-formik-master/src/components/contactForm3.js"],"names":["emailjs","React","Formik","useField","Form","Yup","CustomTextInput","label","props","field","meta","id","name","touched","error","ContactUs","sendEmail","values","console","log","send","then","result","text","email","subject","message","object","string","min","max","required","setSubmitting","resetForm","setTimeout","alert","JSON","stringify","isSubmitting"],"mappings":"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","sourcesContent":["import emailjs from \"emailjs-com\";\nimport React from \"react\";\nimport { Formik, useField,Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport \"../App.css\";\n// https://www.youtube.com/watch?v=3sXYK60T6Us&t=329s\n// npm install -S yup\n// https://www.youtube.com/watch?v=3sXYK60T6Us\n\nconst CustomTextInput = ({ label, ...props }) => {\n  const [field, meta] = useField(props);\n  return (\n    <>\n      <label htmlFor={props.id || props.name}>{label}</label>\n      <input className=\"text-input\" {...field} {...props} />\n      {meta.touched && meta.error ? (\n        <div className=\"error\">{meta.error}</div>\n      ) : null}\n    </>\n  );\n};\n\nexport default function ContactUs() {\n  function sendEmail(values) {\n    \n    console.log(values);\n    emailjs\n      .send(\n        \n        \"template_KYeLN1ok\",\n        values,\n        \n      )\n      .then(\n        result => {\n          console.log(result.text);\n        },\n        error => {\n          console.log(error.text);\n        }\n      );\n    \n  }\n\n  return (\n    <Formik\n      initialValues={{\n        name: \"\",\n        email: \"\",\n        subject: \"\",\n        message: \"\"\n      }}\n      validationSchema={Yup.object({\n        name: Yup.string()\n          .min(2, \"Must be ath least 2 characters\")\n          .max(15, \"15characters or less\")\n          .required(\"Required\"),\n        email: Yup.string().email(\"Invalid email address\").required(\"Required\"),\n        message: Yup.string().required(\"Required\")\n      })}\n      onSubmit={(values, { setSubmitting, resetForm }) => {\n        setTimeout(() => {\n          sendEmail(values);\n          alert(JSON.stringify(values, null, 2));\n          resetForm();\n          setSubmitting(false);\n          \n        }, 2000); \n        \n      }}\n      // && {sendEmail} \n    >\n      {props => (\n        <Form>\n          <h1>Contact Form</h1>\n          <CustomTextInput\n            label=\"Name\"\n            name=\"name\"\n            type=\"text\"\n            placeholder=\"Frank\"\n          />\n          <CustomTextInput\n            label=\"Email\"\n            name=\"email\"\n            type=\"email\"\n            placeholder=\"Frank@gmail.com\"\n          />\n          <CustomTextInput\n            label=\"Subject (not req.)\"\n            name=\"subject\"\n            type=\"text\"\n            placeholder=\"...\"\n          />\n          <CustomTextInput\n            label=\"Message\"\n            id=\"message\"\n            name=\"message\"\n            type=\"textarea\"\n            rows=\"3\"\n            placeholder=\"...\"\n          />\n          <button type=\"submit\" className=\"button\">\n            {props.isSubmitting ? \"Loading...\" : \"Submit\"}\n          </button>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}